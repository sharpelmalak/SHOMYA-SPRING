package iti.jets.persistence.model;
// Generated Sep 2, 2024, 5:22:05â€¯PM by Hibernate Tools 6.5.1.Final


import jakarta.persistence.*;

import java.util.HashSet;
import java.util.Objects;
import java.util.Set;

/**
 * Product generated by hbm2java
 */
@Entity
@Table(name="product"
    ,catalog="shomya"
)
public class Product  implements java.io.Serializable {


     private int id;
     private Admin admin;
     private Category category;
     private String name;
     private float price;
     private int quantity;
     private String description;
     private byte[] image;
     private boolean isDeleted = false;
     private Set<CartItem> cartItems = new HashSet<CartItem>(0);
     private Set<OrderItem> orderItems = new HashSet<OrderItem>(0);
     private Set<Customer> customers = new HashSet<Customer>(0);

    public Product() {
    }

	
    public Product(Admin admin, Category category, String name, float price, int quantity) {
        this.admin = admin;
        this.category = category;
        this.name = name;
        this.price = price;
        this.quantity = quantity;
    }
    public Product(Admin admin, Category category,String name, float price, int quantity, String description, byte[] image) {

        this.admin = admin;
        this.category = category;
       this.name = name;
       this.price = price;
       this.quantity = quantity;
       this.description = description;
       this.image = image;
    }
   
     @Id@GeneratedValue(strategy = GenerationType.IDENTITY)
    public int getId() {
        return this.id;
    }
    
    public void setId(int id) {
        this.id = id;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="admin_id", nullable=false)
    public Admin getAdmin() {
        return this.admin;
    }
    
    public void setAdmin(Admin admin) {
        this.admin = admin;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="category_id", nullable=false)
    public Category getCategory() {
        return this.category;
    }
    
    public void setCategory(Category category) {
        this.category = category;
    }

    
    @Column(name="name", nullable=false, length=45)
    public String getName() {
        return this.name;
    }
    
    public void setName(String name) {
        this.name = name;
    }

    
    @Column(name="price", nullable=false, precision=12)
    public float getPrice() {
        return this.price;
    }
    
    public void setPrice(float price) {
        this.price = price;
    }

    
    @Column(name="quantity", nullable=false)
    public int getQuantity() {
        return this.quantity;
    }
    
    public void setQuantity(int quantity) {
        this.quantity = quantity;
    }

    
    @Column(name="description", length=200)
    public String getDescription() {
        return this.description;
    }
    
    public void setDescription(String description) {
        this.description = description;
    }

    
    @Column(name="image")
    @Lob
    public byte[] getImage() {
        return this.image;
    }
    
    public void setImage(byte[] image) {
        this.image = image;
    }
    @Column(name = "is_deleted", nullable = false)
    public boolean isDeleted() {
        return isDeleted;
    }

    public void setDeleted(boolean isDeleted) {
        this.isDeleted = isDeleted;
    }
@OneToMany(fetch=FetchType.LAZY, mappedBy="product")
    public Set<CartItem> getCartItems() {
        return this.cartItems;
    }
    
    public void setCartItems(Set<CartItem> cartItems) {
        this.cartItems = cartItems;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="product")
    public Set<OrderItem> getOrderItems() {
        return this.orderItems;
    }
    
    public void setOrderItems(Set<OrderItem> orderItems) {
        this.orderItems = orderItems;
    }

@ManyToMany(fetch=FetchType.LAZY)
    @JoinTable(name="customer_wishlist", catalog="shomya", joinColumns = { 
        @JoinColumn(name="product_id", nullable=false) }, inverseJoinColumns = {
        @JoinColumn(name="customer_id", nullable=false) })
    public Set<Customer> getCustomers() {
        return this.customers;
    }
    
    public void setCustomers(Set<Customer> customers) {
        this.customers = customers;
    }

    @Override
    public int hashCode() {
        return Objects.hash(price, quantity);
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj) {
            return true;
        }
        if (obj == null || getClass() != obj.getClass()) {
            return false;
        }
        Product other = (Product) obj;

        // Only check price and quantity for equality
        return Double.compare(this.price, other.price) == 0 &&
                this.quantity == other.quantity;
    }


}


